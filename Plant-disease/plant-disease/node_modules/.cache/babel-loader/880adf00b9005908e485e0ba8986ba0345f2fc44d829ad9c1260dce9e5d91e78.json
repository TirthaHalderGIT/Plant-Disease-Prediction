{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanshika Kothari\\\\Plant-disease\\\\plant-disease\\\\src\\\\pages\\\\Info.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Typography, Box, Card, CardContent, Grid, makeStyles, CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  card: {\n    backgroundColor: \"#F1F8E9\",\n    boxShadow: \"0px 6px 15px rgba(0, 100, 0, 0.2)\",\n    borderRadius: \"12px\",\n    padding: \"16px\",\n    transition: \"transform 0.3s ease-in-out\",\n    \"&:hover\": {\n      transform: \"scale(1.05)\"\n    }\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontFamily: \"'Poppins', sans-serif\",\n    color: \"#2E7D32\",\n    marginBottom: \"10px\"\n  },\n  content: {\n    fontSize: \"15px\",\n    fontFamily: \"'Poppins', sans-serif\",\n    lineHeight: 1.6,\n    color: \"#333\"\n  }\n});\nconst Info = () => {\n  _s();\n  const [diseaseInfo, setDiseaseInfo] = useState(null);\n  const [formattedPrediction, setFormattedPrediction] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const {\n    prediction\n  } = useParams();\n  const classes = useStyles();\n  const extractSections = text => {\n    text = text.replace(/\\*\\s*/g, \"\").trim();\n    const regex = /(What it is:|Causes:|Symptoms:|Effects[\\w\\s]*?:|Treatment Plan:|Prevention Methods:)[\\s\\S]*?(?=(What it is:|Causes:|Symptoms:|Effects[\\w\\s]*?:|Treatment Plan:|Prevention Methods:|$))/g;\n    const matches = [...text.matchAll(regex)];\n    const sectionData = {};\n    matches.forEach(match => {\n      const key = match[1].replace(\":\", \"\").trim();\n      sectionData[key] = match[0].replace(match[1], \"\").trim();\n    });\n    console.log(sectionData);\n    return sectionData;\n  };\n  useEffect(() => {\n    if (!prediction) console.log(prediction);\n    const cleanPrediction = prediction.replace(/_/g, \" \").trim();\n    setFormattedPrediction(cleanPrediction); // Update formatted prediction\n\n    fetch(`http://127.0.0.1:5000/diseaseinfo?prediction=${cleanPrediction}`, {\n      method: \"GET\"\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch disease details\");\n      }\n      return response.json();\n    }).then(data => {\n      const extracted = extractSections(data.info);\n      setDiseaseInfo(extracted);\n      console.log(diseaseInfo);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching disease details:\", error);\n    });\n  }, [prediction]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"5px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        color: \"#1B5E20\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      marginTop: \"4px\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      style: {\n        fontWeight: \"bold\",\n        color: \"#2E7D32\",\n        textAlign: \"center\",\n        marginBottom: \"30px\"\n      },\n      children: [formattedPrediction, \" disease information\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: Object.entries(diseaseInfo).map(([title, content], index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            style: {\n              padding: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              className: classes.title,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              classname: classes.content,\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 4\n  }, this);\n};\n_s(Info, \"luQ+1sJIKtHh+2985a8Dqq2ZDeA=\", false, function () {\n  return [useParams, useStyles];\n});\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Typography","Box","Card","CardContent","Grid","makeStyles","CircularProgress","jsxDEV","_jsxDEV","useStyles","card","backgroundColor","boxShadow","borderRadius","padding","transition","transform","title","fontWeight","fontFamily","color","marginBottom","content","fontSize","lineHeight","Info","_s","diseaseInfo","setDiseaseInfo","formattedPrediction","setFormattedPrediction","loading","setLoading","prediction","classes","extractSections","text","replace","trim","regex","matches","matchAll","sectionData","forEach","match","key","console","log","cleanPrediction","fetch","method","then","response","ok","Error","json","data","extracted","info","catch","error","style","display","justifyContent","alignItems","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","variant","gutterBottom","textAlign","container","spacing","Object","entries","map","index","item","xs","sm","className","classname","_c","$RefreshReg$"],"sources":["C:/Users/Vanshika Kothari/Plant-disease/plant-disease/src/pages/Info.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Typography ,Box,Card,CardContent,Grid,makeStyles, CircularProgress} from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#F1F8E9\",\r\n    boxShadow: \"0px 6px 15px rgba(0, 100, 0, 0.2)\",\r\n    borderRadius: \"12px\",\r\n    padding: \"16px\",\r\n    transition: \"transform 0.3s ease-in-out\",\r\n    \"&:hover\": { transform: \"scale(1.05)\" }, \r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    color: \"#2E7D32\",\r\n    marginBottom:\"10px\"\r\n  },\r\n  content: {\r\n    fontSize: \"15px\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    lineHeight: 1.6,\r\n    color: \"#333\",\r\n  },\r\n});\r\nconst Info = () => {\r\n  const [diseaseInfo, setDiseaseInfo] = useState(null);\r\n  const [formattedPrediction, setFormattedPrediction] = useState(\"\");\r\n  const [loading,setLoading]=useState(true);\r\n  const { prediction } = useParams();\r\n   const classes=useStyles();\r\n  const extractSections = (text) => {\r\n    text = text.replace(/\\*\\s*/g, \"\").trim();\r\n    const regex = /(What it is:|Causes:|Symptoms:|Effects[\\w\\s]*?:|Treatment Plan:|Prevention Methods:)[\\s\\S]*?(?=(What it is:|Causes:|Symptoms:|Effects[\\w\\s]*?:|Treatment Plan:|Prevention Methods:|$))/g;\r\n\r\n    const matches = [...text.matchAll(regex)];\r\n\r\n    const sectionData = {};\r\n    matches.forEach((match) => {\r\n      const key = match[1].replace(\":\", \"\").trim();\r\n      sectionData[key] = match[0].replace(match[1], \"\").trim();\r\n    });\r\n    console.log(sectionData);\r\n    return sectionData;\r\n  };\r\n  useEffect(() => {\r\n    if(!prediction)\r\n    console.log(prediction)\r\n    const cleanPrediction = prediction.replace(/_/g, \" \").trim();\r\n    setFormattedPrediction(cleanPrediction); // Update formatted prediction\r\n\r\n    fetch(`http://127.0.0.1:5000/diseaseinfo?prediction=${cleanPrediction}`, {\r\n      method: \"GET\",\r\n    }).then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch disease details\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        const extracted=extractSections(data.info)\r\n        setDiseaseInfo(extracted);\r\n        console.log(diseaseInfo)\r\n        setLoading(false)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching disease details:\", error);\r\n      });\r\n  }, [prediction]); \r\n\r\n  if(loading)\r\n    return (<Box\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop:\"5px\"\r\n  }}\r\n>\r\n  <CircularProgress style={{ color: \"#1B5E20\" }} />\r\n</Box>)\r\n\r\n  return (\r\n   <Box style={{marginTop:\"4px\",display: \"flex\", flexDirection: \"column\" }}>\r\n    <Typography variant=\"h4\" gutterBottom style={{ fontWeight: \"bold\", color: \"#2E7D32\", textAlign: \"center\",marginBottom:\"30px\" }}>\r\n        {formattedPrediction} disease information\r\n      </Typography>\r\n     <Grid container spacing={3} justifyContent=\"center\">\r\n        {Object.entries(diseaseInfo).map(([title, content], index) => (\r\n          <Grid item xs={12} sm={6} key={index}> \r\n            <Card\r\n              className={classes.card}\r\n            >\r\n              <CardContent style={{ padding: 3 }}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  {title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" classname={classes.content}>\r\n                  {content}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n   </Box>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}