{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanshika Kothari\\\\Plant-disease\\\\plant-disease\\\\src\\\\pages\\\\DiseaseInfo.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Typography, Card, CardContent, Container, Grid, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  card: {\n    backgroundColor: \"#F1F8E9\",\n    boxShadow: \"0px 6px 15px rgba(0, 100, 0, 0.2)\",\n    borderRadius: \"12px\",\n    padding: \"16px\",\n    transition: \"transform 0.3s ease-in-out\",\n    \"&:hover\": {\n      transform: \"scale(1.05)\"\n    }\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontFamily: \"'Poppins', sans-serif\",\n    color: \"#2E7D32\",\n    marginBottom: \"10px\"\n  },\n  content: {\n    fontSize: \"15px\",\n    fontFamily: \"'Poppins', sans-serif\",\n    lineHeight: 1.6,\n    color: \"#333\"\n  }\n});\nconst DiseaseInfo = () => {\n  _s();\n  const classes = useStyles();\n  const location = useLocation();\n  const {\n    disease\n  } = location.state || {};\n  if (!disease) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      children: \"No Disease Data Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    style: {\n      marginTop: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: disease.common_name || \"Unknown Disease\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: [disease.description && disease.description.map((desc, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              className: classes.title,\n              children: desc.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.content,\n              children: desc.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)\n      }, `desc-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)), disease.solution && disease.solution.map((sol, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              className: classes.title,\n              children: sol.subtitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.content,\n              style: {\n                whiteSpace: \"pre-line\"\n              },\n              children: sol.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, `sol-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DiseaseInfo, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n_c = DiseaseInfo;\nexport default DiseaseInfo;\nvar _c;\n$RefreshReg$(_c, \"DiseaseInfo\");","map":{"version":3,"names":["React","useLocation","Typography","Card","CardContent","Container","Grid","makeStyles","jsxDEV","_jsxDEV","useStyles","card","backgroundColor","boxShadow","borderRadius","padding","transition","transform","title","fontWeight","fontFamily","color","marginBottom","content","fontSize","lineHeight","DiseaseInfo","_s","classes","location","disease","state","variant","align","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","style","marginTop","gutterBottom","common_name","container","spacing","justifyContent","description","map","desc","index","item","xs","sm","className","subtitle","solution","sol","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/Vanshika Kothari/Plant-disease/plant-disease/src/pages/DiseaseInfo.js"],"sourcesContent":["import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Typography, Card, CardContent, Container, Grid ,makeStyles} from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#F1F8E9\",\r\n    boxShadow: \"0px 6px 15px rgba(0, 100, 0, 0.2)\",\r\n    borderRadius: \"12px\",\r\n    padding: \"16px\",\r\n    transition: \"transform 0.3s ease-in-out\",\r\n    \"&:hover\": { transform: \"scale(1.05)\" }, \r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    color: \"#2E7D32\",\r\n    marginBottom:\"10px\"\r\n  },\r\n  content: {\r\n    fontSize: \"15px\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    lineHeight: 1.6,\r\n    color: \"#333\",\r\n  },\r\n});\r\nconst DiseaseInfo = () => {\r\n   const classes=useStyles()\r\n  const location = useLocation();\r\n  const { disease } = location.state || {};\r\n\r\n  if (!disease) {\r\n    return <Typography variant=\"h5\" align=\"center\">No Disease Data Available</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: \"20px\" }}>\r\n      {/* Disease Title */}\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        {disease.common_name || \"Unknown Disease\"}\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n  {/* Description Section */}\r\n  {disease.description && disease.description.map((desc, index) => (\r\n    <Grid item xs={12} sm={6} key={`desc-${index}`}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {desc.subtitle}\r\n          </Typography>\r\n          <Typography variant=\"body1\" className={classes.content}>\r\n            {desc.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  ))}\r\n\r\n  {/* Solution Section */}\r\n  {disease.solution && disease.solution.map((sol, index) => (\r\n    <Grid item xs={12} sm={6} key={`sol-${index}`}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {sol.subtitle}\r\n          </Typography>\r\n          <Typography variant=\"body1\" className={classes.content} style={{ whiteSpace: \"pre-line\" }}>\r\n            {sol.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  ))}\r\n</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DiseaseInfo;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}