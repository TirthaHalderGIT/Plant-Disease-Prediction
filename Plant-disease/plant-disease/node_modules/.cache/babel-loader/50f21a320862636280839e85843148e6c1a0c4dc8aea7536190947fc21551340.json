{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanshika Kothari\\\\Plant-disease\\\\plant-disease\\\\src\\\\pages\\\\Info.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Typography, Box, Card, CardContent, Grid, makeStyles, CircularProgress } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  card: {\n    backgroundColor: \"#F1F8E9\",\n    boxShadow: \"0px 6px 15px rgba(0, 100, 0, 0.2)\",\n    borderRadius: \"12px\",\n    padding: \"16px\",\n    transition: \"transform 0.3s ease-in-out\",\n    \"&:hover\": {\n      transform: \"scale(1.05)\"\n    }\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontFamily: \"'Poppins', sans-serif\",\n    color: \"#2E7D32\",\n    marginBottom: \"10px\"\n  },\n  content: {\n    fontSize: \"15px\",\n    fontFamily: \"'Poppins', sans-serif\",\n    lineHeight: 1.6,\n    color: \"#333\"\n  }\n});\nconst Info = () => {\n  _s();\n  const [diseaseInfo, setDiseaseInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const {\n    prediction\n  } = useParams();\n  const classes = useStyles();\n  const extractSections = text => {\n    text = text.replace(/\\*\\s*/g, \"\").trim();\n    const regex = /(What it is:|Causes:|Symptoms:|Effects:|Treatment Plan:|Prevention Methods:)[\\s\\S]*?(?=(What it is:|Causes:|Symptoms:|Effects:|Treatment Plan:|Prevention Methods:|$))/g;\n    const matches = [...text.matchAll(regex)];\n    const sectionData = {};\n    matches.forEach(match => {\n      const key = match[1].replace(\":\", \"\").trim();\n      sectionData[key] = match[0].replace(match[1], \"\").trim();\n    });\n    console.log(sectionData);\n    return sectionData;\n  };\n  useEffect(() => {\n    // if(!prediction)\n    // console.log(prediction)\n    // fetch(`http://127.0.0.1:5000/diseaseinfo?prediction=${prediction}`,{\n    //   method:\"GET\"\n    // })\n    //   .then(response => {\n    //     if (!response.ok) {\n    //       throw new Error(\"Failed to fetch disease details\");\n    //     }\n    //     return response.json();\n    //   })\n    //   .then(data => {\n    const info = `\n\n**Peach Bacterial Spot**\n\n*   **What it is:** A common and often serious disease affecting peach, nectarine, apricot, and plum trees, caused by bacteria.\n*   **Causes:** The bacterium *Xanthomonas arboricola* pv. *pruni*. It spreads primarily through wind-driven rain and thrives in warm, wet, humid conditions. Bacteria overwinter in twig cankers and leaf buds.\n*   **Symptoms:**\n    *   **Leaves:** Small, angular, water-soaked spots appear, turning purplish-brown to black. The centers often fall out, leaving a \"shot-hole\" appearance. Infected leaves may yellow and drop prematurely.\n    *   **Fruit:** Small, circular, olive-green spots form, becoming darker, sunken, and sometimes cracked or gummy as the fruit matures.\n    *   **Twigs:** Dark, sunken lesions (cankers) can form, especially on young growth (less common/obvious than leaf/fruit symptoms but important for overwintering).\n*   **Effects on the Plant:** Reduces photosynthesis due to leaf damage and loss, weakening the tree. Makes fruit unmarketable and susceptible to secondary rots. Severe infections can cause significant defoliation, stressing the tree and potentially reducing future yields or increasing winter injury susceptibility.\n*   **Treatment Plan:**\n    *   Difficult to control once infection is widespread during the season.\n    *   Copper sprays (applied during dormancy or very early spring) can help reduce overwintering bacteria.\n    *   Antibiotic sprays (e.g., oxytetracycline) may be used during the growing season, requiring careful timing and rotation to manage resistance. Follow local extension recommendations.\n*   **Prevention Methods:**\n    *   **Plant resistant varieties:** This is the most effective long-term strategy.\n    *   **Promote good air circulation:** Prune trees to open the canopy, allowing leaves to dry quickly.\n    *   **Site selection:** Avoid planting in low-lying areas prone to fog or poor air movement.      \n    *   **Water management:** Avoid overhead irrigation that wets foliage.\n    *   **Sanitation:** While less critical than twig cankers, cleaning up fallen leaves might help slightly. Prune out visible cankers during dormancy.\n    *   **Maintain tree vigor:** Healthy trees may tolerate infection better, but avoid excessive nitrogen fertilization which promotes susceptible young growth.`;\n    const extracted = extractSections(info);\n    setDiseaseInfo(extracted);\n    console.log(diseaseInfo);\n    setLoading(false);\n    // })\n    // .catch(error => {\n    //   console.error(\"Error fetching disease details:\", error);\n    // });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: \"5px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        color: \"#1B5E20\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      marginTop: \"4px\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      style: {\n        fontWeight: \"bold\",\n        color: \"#2E7D32\",\n        textAlign: \"center\",\n        marginBottom: \"30px\"\n      },\n      children: \"\\uD83C\\uDF31 PLANT DISEASE INFORMATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: Object.entries(diseaseInfo).map(([title, content], index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            style: {\n              padding: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              className: classes.title,\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              classname: classes.content,\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 4\n  }, this);\n};\n_s(Info, \"o8ifpeqbI5Y1RT7cWt4k4+o6VLg=\", false, function () {\n  return [useParams, useStyles];\n});\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Container","Typography","Box","Card","CardContent","Grid","makeStyles","CircularProgress","jsxDEV","_jsxDEV","useStyles","card","backgroundColor","boxShadow","borderRadius","padding","transition","transform","title","fontWeight","fontFamily","color","marginBottom","content","fontSize","lineHeight","Info","_s","diseaseInfo","setDiseaseInfo","loading","setLoading","prediction","classes","extractSections","text","replace","trim","regex","matches","matchAll","sectionData","forEach","match","key","console","log","info","extracted","style","display","justifyContent","alignItems","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","variant","gutterBottom","textAlign","container","spacing","Object","entries","map","index","item","xs","sm","className","classname","_c","$RefreshReg$"],"sources":["C:/Users/Vanshika Kothari/Plant-disease/plant-disease/src/pages/Info.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Typography ,Box,Card,CardContent,Grid,makeStyles, CircularProgress} from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    backgroundColor: \"#F1F8E9\",\r\n    boxShadow: \"0px 6px 15px rgba(0, 100, 0, 0.2)\",\r\n    borderRadius: \"12px\",\r\n    padding: \"16px\",\r\n    transition: \"transform 0.3s ease-in-out\",\r\n    \"&:hover\": { transform: \"scale(1.05)\" }, \r\n  },\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    color: \"#2E7D32\",\r\n    marginBottom:\"10px\"\r\n  },\r\n  content: {\r\n    fontSize: \"15px\",\r\n    fontFamily: \"'Poppins', sans-serif\",\r\n    lineHeight: 1.6,\r\n    color: \"#333\",\r\n  },\r\n});\r\nconst Info = () => {\r\n  const [diseaseInfo, setDiseaseInfo] = useState(null);\r\n  const [loading,setLoading]=useState(true);\r\n  const { prediction } = useParams();\r\n   const classes=useStyles();\r\n  const extractSections = (text) => {\r\n    text = text.replace(/\\*\\s*/g, \"\").trim();\r\n    const regex = /(What it is:|Causes:|Symptoms:|Effects:|Treatment Plan:|Prevention Methods:)[\\s\\S]*?(?=(What it is:|Causes:|Symptoms:|Effects:|Treatment Plan:|Prevention Methods:|$))/g;\r\n    const matches = [...text.matchAll(regex)];\r\n\r\n    const sectionData = {};\r\n    matches.forEach((match) => {\r\n      const key = match[1].replace(\":\", \"\").trim();\r\n      sectionData[key] = match[0].replace(match[1], \"\").trim();\r\n    });\r\n    console.log(sectionData);\r\n    return sectionData;\r\n  };\r\n  useEffect(() => {\r\n    // if(!prediction)\r\n    // console.log(prediction)\r\n    // fetch(`http://127.0.0.1:5000/diseaseinfo?prediction=${prediction}`,{\r\n    //   method:\"GET\"\r\n    // })\r\n    //   .then(response => {\r\n    //     if (!response.ok) {\r\n    //       throw new Error(\"Failed to fetch disease details\");\r\n    //     }\r\n    //     return response.json();\r\n    //   })\r\n    //   .then(data => {\r\n        const info=`\r\n\r\n**Peach Bacterial Spot**\r\n\r\n*   **What it is:** A common and often serious disease affecting peach, nectarine, apricot, and plum trees, caused by bacteria.\r\n*   **Causes:** The bacterium *Xanthomonas arboricola* pv. *pruni*. It spreads primarily through wind-driven rain and thrives in warm, wet, humid conditions. Bacteria overwinter in twig cankers and leaf buds.\r\n*   **Symptoms:**\r\n    *   **Leaves:** Small, angular, water-soaked spots appear, turning purplish-brown to black. The centers often fall out, leaving a \"shot-hole\" appearance. Infected leaves may yellow and drop prematurely.\r\n    *   **Fruit:** Small, circular, olive-green spots form, becoming darker, sunken, and sometimes cracked or gummy as the fruit matures.\r\n    *   **Twigs:** Dark, sunken lesions (cankers) can form, especially on young growth (less common/obvious than leaf/fruit symptoms but important for overwintering).\r\n*   **Effects on the Plant:** Reduces photosynthesis due to leaf damage and loss, weakening the tree. Makes fruit unmarketable and susceptible to secondary rots. Severe infections can cause significant defoliation, stressing the tree and potentially reducing future yields or increasing winter injury susceptibility.\r\n*   **Treatment Plan:**\r\n    *   Difficult to control once infection is widespread during the season.\r\n    *   Copper sprays (applied during dormancy or very early spring) can help reduce overwintering bacteria.\r\n    *   Antibiotic sprays (e.g., oxytetracycline) may be used during the growing season, requiring careful timing and rotation to manage resistance. Follow local extension recommendations.\r\n*   **Prevention Methods:**\r\n    *   **Plant resistant varieties:** This is the most effective long-term strategy.\r\n    *   **Promote good air circulation:** Prune trees to open the canopy, allowing leaves to dry quickly.\r\n    *   **Site selection:** Avoid planting in low-lying areas prone to fog or poor air movement.      \r\n    *   **Water management:** Avoid overhead irrigation that wets foliage.\r\n    *   **Sanitation:** While less critical than twig cankers, cleaning up fallen leaves might help slightly. Prune out visible cankers during dormancy.\r\n    *   **Maintain tree vigor:** Healthy trees may tolerate infection better, but avoid excessive nitrogen fertilization which promotes susceptible young growth.`\r\n        const extracted=extractSections(info)\r\n        setDiseaseInfo(extracted);\r\n        console.log(diseaseInfo)\r\n        setLoading(false)\r\n      // })\r\n      // .catch(error => {\r\n      //   console.error(\"Error fetching disease details:\", error);\r\n      // });\r\n  }, []); \r\n\r\n  if(loading)\r\n    return (<Box\r\n  style={{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop:\"5px\"\r\n  }}\r\n>\r\n  <CircularProgress style={{ color: \"#1B5E20\" }} />\r\n</Box>)\r\n\r\n  return (\r\n   <Box style={{marginTop:\"4px\",display: \"flex\", flexDirection: \"column\" }}>\r\n    <Typography variant=\"h4\" gutterBottom style={{ fontWeight: \"bold\", color: \"#2E7D32\", textAlign: \"center\",marginBottom:\"30px\" }}>\r\n        🌱 PLANT DISEASE INFORMATION\r\n      </Typography>\r\n     <Grid container spacing={3} justifyContent=\"center\">\r\n        {Object.entries(diseaseInfo).map(([title, content], index) => (\r\n          <Grid item xs={12} sm={6} key={index}> \r\n            <Card\r\n              className={classes.card}\r\n            >\r\n              <CardContent style={{ padding: 3 }}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  {title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" classname={classes.content}>\r\n                  {content}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n   </Box>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,UAAU,EAAEC,GAAG,EAACC,IAAI,EAACC,WAAW,EAACC,IAAI,EAACC,UAAU,EAAEC,gBAAgB,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjH,MAAMC,SAAS,GAAGJ,UAAU,CAAC;EAC3BK,IAAI,EAAE;IACJC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,mCAAmC;IAC9CC,YAAY,EAAE,MAAM;IACpBC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,4BAA4B;IACxC,SAAS,EAAE;MAAEC,SAAS,EAAE;IAAc;EACxC,CAAC;EACDC,KAAK,EAAE;IACLC,UAAU,EAAE,MAAM;IAClBC,UAAU,EAAE,uBAAuB;IACnCC,KAAK,EAAE,SAAS;IAChBC,YAAY,EAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAE,MAAM;IAChBJ,UAAU,EAAE,uBAAuB;IACnCK,UAAU,EAAE,GAAG;IACfJ,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AACF,MAAMK,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiC,OAAO,EAACC,UAAU,CAAC,GAAClC,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM;IAAEmC;EAAW,CAAC,GAAGjC,SAAS,CAAC,CAAC;EACjC,MAAMkC,OAAO,GAACvB,SAAS,CAAC,CAAC;EAC1B,MAAMwB,eAAe,GAAIC,IAAI,IAAK;IAChCA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;IACxC,MAAMC,KAAK,GAAG,yKAAyK;IACvL,MAAMC,OAAO,GAAG,CAAC,GAAGJ,IAAI,CAACK,QAAQ,CAACF,KAAK,CAAC,CAAC;IAEzC,MAAMG,WAAW,GAAG,CAAC,CAAC;IACtBF,OAAO,CAACG,OAAO,CAAEC,KAAK,IAAK;MACzB,MAAMC,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACP,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;MAC5CI,WAAW,CAACG,GAAG,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACP,OAAO,CAACO,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACN,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;IACxB,OAAOA,WAAW;EACpB,CAAC;EACD3C,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI,MAAMiD,IAAI,GAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kKAAkK;IAC1J,MAAMC,SAAS,GAACd,eAAe,CAACa,IAAI,CAAC;IACrClB,cAAc,CAACmB,SAAS,CAAC;IACzBH,OAAO,CAACC,GAAG,CAAClB,WAAW,CAAC;IACxBG,UAAU,CAAC,KAAK,CAAC;IACnB;IACA;IACA;IACA;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAGD,OAAO,EACR,oBAAQrB,OAAA,CAACP,GAAG;IACd+C,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAC;IACZ,CAAE;IAAAC,QAAA,eAEF7C,OAAA,CAACF,gBAAgB;MAAC0C,KAAK,EAAE;QAAE5B,KAAK,EAAE;MAAU;IAAE;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;EAEJ,oBACCjD,OAAA,CAACP,GAAG;IAAC+C,KAAK,EAAE;MAACI,SAAS,EAAC,KAAK;MAACH,OAAO,EAAE,MAAM;MAAES,aAAa,EAAE;IAAS,CAAE;IAAAL,QAAA,gBACvE7C,OAAA,CAACR,UAAU;MAAC2D,OAAO,EAAC,IAAI;MAACC,YAAY;MAACZ,KAAK,EAAE;QAAE9B,UAAU,EAAE,MAAM;QAAEE,KAAK,EAAE,SAAS;QAAEyC,SAAS,EAAE,QAAQ;QAACxC,YAAY,EAAC;MAAO,CAAE;MAAAgC,QAAA,EAAC;IAE9H;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACdjD,OAAA,CAACJ,IAAI;MAAC0D,SAAS;MAACC,OAAO,EAAE,CAAE;MAACb,cAAc,EAAC,QAAQ;MAAAG,QAAA,EAC/CW,MAAM,CAACC,OAAO,CAACtC,WAAW,CAAC,CAACuC,GAAG,CAAC,CAAC,CAACjD,KAAK,EAAEK,OAAO,CAAC,EAAE6C,KAAK,kBACvD3D,OAAA,CAACJ,IAAI;QAACgE,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAjB,QAAA,eACvB7C,OAAA,CAACN,IAAI;UACHqE,SAAS,EAAEvC,OAAO,CAACtB,IAAK;UAAA2C,QAAA,eAExB7C,OAAA,CAACL,WAAW;YAAC6C,KAAK,EAAE;cAAElC,OAAO,EAAE;YAAE,CAAE;YAAAuC,QAAA,gBACjC7C,OAAA,CAACR,UAAU;cAAC2D,OAAO,EAAC,IAAI;cAACY,SAAS,EAAEvC,OAAO,CAACf,KAAM;cAAAoC,QAAA,EAC/CpC;YAAK;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC,eACbjD,OAAA,CAACR,UAAU;cAAC2D,OAAO,EAAC,OAAO;cAACa,SAAS,EAAExC,OAAO,CAACV,OAAQ;cAAA+B,QAAA,EACpD/B;YAAO;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAZsBU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAa9B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAET,CAAC;AAAC/B,EAAA,CApGID,IAAI;EAAA,QAGe3B,SAAS,EACjBW,SAAS;AAAA;AAAAgE,EAAA,GAJpBhD,IAAI;AAsGV,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}