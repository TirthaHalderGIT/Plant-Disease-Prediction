{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vanshika Kothari\\\\Plant-disease\\\\plant-disease\\\\src\\\\pages\\\\Info.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Info = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [diseaseInfo, setDiseaseInfo] = useState(null);\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      prediction\n    } = useParams();\n    fetch(`http://127.0.0.1:5000/get_disease_details?prediction=${prediction}`, {\n      method: 'GET'\n    }).then(response => response.json()).then(data => {\n      setDiseaseInfo(data.info);\n    }).catch(error => {\n      console.log(\"error\");\n    });\n  }, \"MYFhukz71d8WBAYZc5Ft13eFyZU=\", false, function () {\n    return [useParams];\n  })), \"MYFhukz71d8WBAYZc5Ft13eFyZU=\", false, function () {\n    return [useParams];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: diseaseInfo.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: diseaseInfo.Summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: diseaseInfo.Symptoms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: diseaseInfo.Treatment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s2(Info, \"gxWqjkseebblA37mRcvx/g33Yho=\");\n_c = Info;\nexport default Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useParams","Typography","jsxDEV","_jsxDEV","Info","_s2","_s","$RefreshSig$","diseaseInfo","setDiseaseInfo","useState","useEffect","prediction","fetch","method","then","response","json","data","info","catch","error","console","log","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","Summary","Symptoms","Treatment","_c","$RefreshReg$"],"sources":["C:/Users/Vanshika Kothari/Plant-disease/plant-disease/src/pages/Info.js"],"sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Typography } from '@material-ui/core';\r\nconst Info = () => {\r\n    const[diseaseInfo,setDiseaseInfo]=useState(null);\r\n    useEffect(()=>{\r\n        const {prediction}=useParams()\r\n        fetch(`http://127.0.0.1:5000/get_disease_details?prediction=${prediction}`,{\r\n            method:'GET'\r\n           }).then(response=>response.json()).then(data=>{\r\n            setDiseaseInfo(data.info)\r\n           \r\n        }).catch(error=>{\r\n            console.log(\"error\");\r\n        })\r\n    })\r\n  return (\r\n    <div>\r\n      <Typography>{diseaseInfo.Title}</Typography>\r\n      <Typography>{diseaseInfo.Summary}</Typography>\r\n      <Typography>{diseaseInfo.Symptoms}</Typography>\r\n      <Typography>{diseaseInfo.Treatment}</Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACf,MAAK,CAACC,WAAW,EAACC,cAAc,CAAC,GAACC,QAAQ,CAAC,IAAI,CAAC;EAChDJ,EAAA,CAAAK,SAAS,CAAAL,EAAA,CAAC,MAAI;IAAAA,EAAA;IACV,MAAM;MAACM;IAAU,CAAC,GAACZ,SAAS,CAAC,CAAC;IAC9Ba,KAAK,CAAC,wDAAwDD,UAAU,EAAE,EAAC;MACvEE,MAAM,EAAC;IACR,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAE;MAC7CT,cAAc,CAACS,IAAI,CAACC,IAAI,CAAC;IAE7B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAE;MACZC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;IAAA,QATsBvB,SAAS;EAAA,EAS/B,CAAC;IAAA,QATqBA,SAAS;EAAA;EAUlC,oBACEG,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACF,UAAU;MAAAuB,QAAA,EAAEhB,WAAW,CAACiB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC5C1B,OAAA,CAACF,UAAU;MAAAuB,QAAA,EAAEhB,WAAW,CAACsB;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC9C1B,OAAA,CAACF,UAAU;MAAAuB,QAAA,EAAEhB,WAAW,CAACuB;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC/C1B,OAAA,CAACF,UAAU;MAAAuB,QAAA,EAAEhB,WAAW,CAACwB;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAAxB,GAAA,CArBKD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAuBV,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}